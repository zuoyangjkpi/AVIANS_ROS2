#!/bin/bash

# AVIANS ROS2 Final Test Script - ÂàõÂª∫Êõ¥ÊòéÊòæÁöÑ‰∫∫Áâ©Ê®°ÂûãËøõË°åYOLOÊµãËØï
# =================================================================

echo "üöÄ AVIANS Final Test - Enhanced Human Detection"
echo "================================================"

# Ëâ≤ÂΩ©ËæìÂá∫
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    local color=$1
    local message=$2
    echo -e "${color}${message}${NC}"
}

# Ê∏ÖÁêÜ‰πãÂâçÁöÑËøõÁ®ã
print_status $YELLOW "üßπ Ê∏ÖÁêÜÁé∞ÊúâËøõÁ®ã..."
pkill -f "gz sim" 2>/dev/null
pkill -f "yolo12_detector_node" 2>/dev/null
pkill -f "nmpc_tracker_node" 2>/dev/null
pkill -f "nmpc_test_node" 2>/dev/null
sleep 2

# ËÆæÁΩÆÁéØÂ¢ÉÂèòÈáè
export DRONE_WS="/home/zuoyangjkpi/AVIANS_ROS2_PORT1"
export PYTHONPATH="/home/zuoyangjkpi/AVIANS_ROS2_PORT1/install/drone_nmpc_tracker/lib/python3.12/site-packages:/home/zuoyangjkpi/AVIANS_ROS2_PORT1/install/neural_network_msgs/lib/python3.12/site-packages"

print_status $YELLOW "üìù ÂàõÂª∫Â¢ûÂº∫ÁöÑ‰∫∫Áâ©Ê®°Âûã..."

# ÂàõÂª∫‰∏Ä‰∏™Êõ¥ÂÉèÁúüÂÆû‰∫∫Á±ªÁöÑSDFÊ®°ÂûãÊñá‰ª∂
cat > /tmp/enhanced_human.sdf << 'EOF'
<?xml version="1.0" ?>
<sdf version="1.6">
  <model name="enhanced_human">
    <static>false</static>
    <pose>0 0 1.0 0 0 0</pose>
    
    <!-- Â§¥ÈÉ® -->
    <link name="head">
      <pose>0 0 1.7 0 0 0</pose>
      <collision name="head_collision">
        <geometry>
          <sphere><radius>0.12</radius></sphere>
        </geometry>
      </collision>
      <visual name="head_visual">
        <geometry>
          <sphere><radius>0.12</radius></sphere>
        </geometry>
        <material>
          <ambient>0.8 0.7 0.6 1</ambient>
          <diffuse>0.8 0.7 0.6 1</diffuse>
        </material>
      </visual>
      <inertial>
        <mass>5.0</mass>
        <inertia>
          <ixx>0.03</ixx><iyy>0.03</iyy><izz>0.03</izz>
        </inertia>
      </inertial>
    </link>
    
    <!-- Ë∫ØÂπ≤ -->
    <link name="torso">
      <pose>0 0 1.3 0 0 0</pose>
      <collision name="torso_collision">
        <geometry>
          <cylinder><radius>0.2</radius><length>0.6</length></cylinder>
        </geometry>
      </collision>
      <visual name="torso_visual">
        <geometry>
          <cylinder><radius>0.2</radius><length>0.6</length></cylinder>
        </geometry>
        <material>
          <ambient>0.0 0.0 1.0 1</ambient>
          <diffuse>0.0 0.0 1.0 1</diffuse>
        </material>
      </visual>
      <inertial>
        <mass>40.0</mass>
        <inertia>
          <ixx>1.5</ixx><iyy>1.5</iyy><izz>0.8</izz>
        </inertia>
      </inertial>
    </link>
    
    <!-- Â∑¶ËáÇ -->
    <link name="left_arm">
      <pose>-0.3 0 1.4 1.57 0 0</pose>
      <collision name="left_arm_collision">
        <geometry>
          <cylinder><radius>0.06</radius><length>0.5</length></cylinder>
        </geometry>
      </collision>
      <visual name="left_arm_visual">
        <geometry>
          <cylinder><radius>0.06</radius><length>0.5</length></cylinder>
        </geometry>
        <material>
          <ambient>0.8 0.7 0.6 1</ambient>
          <diffuse>0.8 0.7 0.6 1</diffuse>
        </material>
      </visual>
      <inertial>
        <mass>3.0</mass>
        <inertia>
          <ixx>0.03</ixx><iyy>0.03</iyy><izz>0.006</izz>
        </inertia>
      </inertial>
    </link>
    
    <!-- Âè≥ËáÇ -->
    <link name="right_arm">
      <pose>0.3 0 1.4 1.57 0 0</pose>
      <collision name="right_arm_collision">
        <geometry>
          <cylinder><radius>0.06</radius><length>0.5</length></cylinder>
        </geometry>
      </collision>
      <visual name="right_arm_visual">
        <geometry>
          <cylinder><radius>0.06</radius><length>0.5</length></cylinder>
        </geometry>
        <material>
          <ambient>0.8 0.7 0.6 1</ambient>
          <diffuse>0.8 0.7 0.6 1</diffuse>
        </material>
      </visual>
      <inertial>
        <mass>3.0</mass>
        <inertia>
          <ixx>0.03</ixx><iyy>0.03</iyy><izz>0.006</izz>
        </inertia>
      </inertial>
    </link>
    
    <!-- Â∑¶ËÖø -->
    <link name="left_leg">
      <pose>-0.1 0 0.5 0 0 0</pose>
      <collision name="left_leg_collision">
        <geometry>
          <cylinder><radius>0.08</radius><length>0.8</length></cylinder>
        </geometry>
      </collision>
      <visual name="left_leg_visual">
        <geometry>
          <cylinder><radius>0.08</radius><length>0.8</length></cylinder>
        </geometry>
        <material>
          <ambient>0.2 0.2 0.8 1</ambient>
          <diffuse>0.2 0.2 0.8 1</diffuse>
        </material>
      </visual>
      <inertial>
        <mass>10.0</mass>
        <inertia>
          <ixx>0.5</ixx><iyy>0.5</iyy><izz>0.03</izz>
        </inertia>
      </inertial>
    </link>
    
    <!-- Âè≥ËÖø -->
    <link name="right_leg">
      <pose>0.1 0 0.5 0 0 0</pose>
      <collision name="right_leg_collision">
        <geometry>
          <cylinder><radius>0.08</radius><length>0.8</length></cylinder>
        </geometry>
      </collision>
      <visual name="right_leg_visual">
        <geometry>
          <cylinder><radius>0.08</radius><length>0.8</length></cylinder>
        </geometry>
        <material>
          <ambient>0.2 0.2 0.8 1</ambient>
          <diffuse>0.2 0.2 0.8 1</diffuse>
        </material>
      </visual>
      <inertial>
        <mass>10.0</mass>
        <inertia>
          <ixx>0.5</ixx><iyy>0.5</iyy><izz>0.03</izz>
        </inertia>
      </inertial>
    </link>
    
    <!-- ÂÖ≥ËäÇËøûÊé• -->
    <joint name="head_torso" type="fixed">
      <parent>torso</parent>
      <child>head</child>
    </joint>
    
    <joint name="torso_left_arm" type="fixed">
      <parent>torso</parent>
      <child>left_arm</child>
    </joint>
    
    <joint name="torso_right_arm" type="fixed">
      <parent>torso</parent>
      <child>right_arm</child>
    </joint>
    
    <joint name="torso_left_leg" type="fixed">
      <parent>torso</parent>
      <child>left_leg</child>
    </joint>
    
    <joint name="torso_right_leg" type="fixed">
      <parent>torso</parent>
      <child>right_leg</child>
    </joint>
    
  </model>
</sdf>
EOF

print_status $GREEN "‚úÖ Â¢ûÂº∫‰∫∫Áâ©Ê®°ÂûãÂ∑≤ÂàõÂª∫"

# ÂàõÂª∫‰øÆÊîπÁöÑworldÊñá‰ª∂ÔºåÂåÖÂê´Â¢ûÂº∫ÁöÑ‰∫∫Áâ©Ê®°Âûã
print_status $YELLOW "üìù ÂàõÂª∫ÊµãËØï‰∏ñÁïåÊñá‰ª∂..."

cp src/drone_description/worlds/drone_world.sdf /tmp/test_world.sdf

# Âú®worldÊñá‰ª∂‰∏≠Ê∑ªÂä†Â¢ûÂº∫ÁöÑ‰∫∫Áâ©Ê®°Âûã
cat >> /tmp/test_world.sdf << 'EOF'

    <!-- Â¢ûÂº∫ÁöÑ‰∫∫Áâ©Ê®°Âûã -->
    <include>
      <uri>file:///tmp/enhanced_human.sdf</uri>
      <pose>1 1 0 0 0 0</pose>
    </include>
    
    <!-- Á¨¨‰∫å‰∏™‰∫∫Áâ©Ê®°Âûã - ‰∏çÂêå‰ΩçÁΩÆ -->
    <include>
      <uri>file:///tmp/enhanced_human.sdf</uri>
      <pose>-2 2 0 0 0 0</pose>
      <name>human2</name>
    </include>

  </world>
</sdf>
EOF

print_status $GREEN "‚úÖ ÊµãËØï‰∏ñÁïåÊñá‰ª∂Â∑≤ÂàõÂª∫"

print_status $YELLOW "üöÄ ÂêØÂä®Gazebo‰ªøÁúü..."

# ÂêØÂä®Gazebo
GZ_SIM_RESOURCE_PATH="/tmp:$GZ_SIM_RESOURCE_PATH" gz sim /tmp/test_world.sdf &
GAZEBO_PID=$!

sleep 8

# Ê£ÄÊü•GazeboÊòØÂê¶ËøêË°å
if pgrep -f "gz sim" > /dev/null; then
    print_status $GREEN "‚úÖ Gazebo‰ªøÁúüÂ∑≤ÂêØÂä®"
else
    print_status $RED "‚ùå GazeboÂêØÂä®Â§±Ë¥•"
    exit 1
fi

print_status $YELLOW "üì∑ ÂêØÂä®Áõ∏Êú∫ËØùÈ¢ò..."

# ÂêØÂä®Ê°•Êé•‰ª•ÂèëÂ∏ÉÁõ∏Êú∫ËØùÈ¢ò
ros2 run ros_gz_bridge parameter_bridge /camera/image_raw@sensor_msgs/msg/Image@gz.msgs.Image &
BRIDGE_PID=$!

sleep 3

print_status $YELLOW "üß† ÂêØÂä®YOLOÊ£ÄÊµãÂô®..."

# Êü•ÊâæYOLOÊ®°ÂûãÊñá‰ª∂
MODEL_PATH=$(find . -name "yolo12n.onnx" | head -1)
LABELS_PATH=$(find . -name "coco.names" | head -1)

if [ -z "$MODEL_PATH" ] || [ -z "$LABELS_PATH" ]; then
    print_status $RED "‚ùå Êâæ‰∏çÂà∞YOLOÊ®°ÂûãÊñá‰ª∂"
    exit 1
fi

print_status $GREEN "üìÅ ‰ΩøÁî®Ê®°Âûã: $MODEL_PATH"
print_status $GREEN "üìÅ ‰ΩøÁî®Ê†áÁ≠æ: $LABELS_PATH"

# ÂêØÂä®YOLOÊ£ÄÊµãÂô®
/opt/ros/jazzy/bin/ros2 run neural_network_detector yolo12_detector_node \
    --ros-args \
    -p "model_path:=$MODEL_PATH" \
    -p "labels_path:=$LABELS_PATH" \
    -p "use_gpu:=false" \
    -p "confidence_threshold:=0.3" \
    -p "desired_class:=0" \
    -p "publish_debug_image:=true" \
    -p "max_update_rate_hz:=2.0" &
YOLO_PID=$!

sleep 5

print_status $YELLOW "üìä ÂêØÂä®ÂèØËßÜÂåñËäÇÁÇπ..."

# ÂêØÂä®ÂèØËßÜÂåñËäÇÁÇπ
/usr/bin/python3 visualization_node.py &
VIZ_PID=$!

sleep 3

print_status $GREEN "üéâ Á≥ªÁªüÂêØÂä®ÂÆåÊàêÔºÅ"
print_status $BLUE "==============================="
print_status $YELLOW "üí° Á≥ªÁªüÁä∂ÊÄÅ:"

# Ê£ÄÊü•ÂêÑ‰∏™ËøõÁ®ã
if pgrep -f "gz sim" > /dev/null; then
    print_status $GREEN "  ‚úÖ Gazebo‰ªøÁúüËøêË°å‰∏≠"
else
    print_status $RED "  ‚ùå Gazebo‰ªøÁúüÊú™ËøêË°å"
fi

if pgrep -f "yolo12_detector_node" > /dev/null; then
    print_status $GREEN "  ‚úÖ YOLOÊ£ÄÊµãÂô®ËøêË°å‰∏≠"
else
    print_status $RED "  ‚ùå YOLOÊ£ÄÊµãÂô®Êú™ËøêË°å"
fi

if pgrep -f "visualization_node" > /dev/null; then
    print_status $GREEN "  ‚úÖ ÂèØËßÜÂåñËäÇÁÇπËøêË°å‰∏≠"
else
    print_status $RED "  ‚ùå ÂèØËßÜÂåñËäÇÁÇπÊú™ËøêË°å"
fi

print_status $BLUE "==============================="
print_status $YELLOW "üîç ÁõëÊéßÊ£ÄÊµãÁªìÊûú..."

# ÁõëÊéßÊ£ÄÊµãËØùÈ¢ò
for i in {1..10}; do
    print_status $YELLOW "Ê£ÄÊµãËΩÆÊ¨° $i/10:"
    
    # Ê£ÄÊü•Áõ∏Êú∫ËØùÈ¢ò
    if timeout 2s ros2 topic echo /camera/image_raw --once > /dev/null 2>&1; then
        print_status $GREEN "  ‚úÖ Áõ∏Êú∫ÂõæÂÉèÂèØÁî®"
    else
        print_status $RED "  ‚ùå Áõ∏Êú∫ÂõæÂÉè‰∏çÂèØÁî®"
    fi
    
    # Ê£ÄÊü•Ê£ÄÊµãËØùÈ¢ò
    DETECTION_MSG=$(timeout 3s ros2 topic echo /person_detections --once 2>/dev/null)
    if [ -n "$DETECTION_MSG" ]; then
        NUM_DETECTIONS=$(echo "$DETECTION_MSG" | grep -c "detection_score")
        if [ "$NUM_DETECTIONS" -gt 0 ]; then
            print_status $GREEN "  ‚úÖ Ê£ÄÊµãÂà∞ $NUM_DETECTIONS ‰∏™‰∫∫"
        else
            print_status $YELLOW "  ‚ö†Ô∏è  Ê£ÄÊµãËØùÈ¢òÊ¥ªË∑É‰ΩÜÊ≤°ÊúâÊ£ÄÊµãÁªìÊûú"
        fi
    else
        print_status $RED "  ‚ùå Ê≤°ÊúâÊ£ÄÊµãËØùÈ¢òÊï∞ÊçÆ"
    fi
    
    sleep 2
done

print_status $BLUE "==============================="
print_status $GREEN "üéØ ÊµãËØïÂÆåÊàê!"
print_status $YELLOW "üí° ‰ΩøÁî®‰ª•‰∏ãÂëΩ‰ª§Êü•ÁúãÂÆûÊó∂Ê£ÄÊµã:"
print_status $YELLOW "   ros2 topic echo /person_detections"
print_status $YELLOW "   rviz2 (Êü•ÁúãÂèØËßÜÂåñ)"
print_status $YELLOW "üí° ‰ΩøÁî®Ctrl+CÂÅúÊ≠¢ÊâÄÊúâËøõÁ®ã"

# Á≠âÂæÖÁî®Êà∑‰∏≠Êñ≠
wait