<sdf version='1.6'>
  <model name='X3'>
    <pose>0 0 0.053302 0 0 0</pose>

    
    <link name='X3/base_link'>
      <pose frame=''>0 0 0 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>1.5</mass>
        <inertia>
          <ixx>0.0347563</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.07</iyy>
          <iyz>0</iyz>
          <izz>0.0977</izz>
        </inertia>
      </inertial>
      <collision name='X3/base_link_inertia_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <box>
            <size>0.47 0.47 0.11</size>
          </box>
        </geometry>
      </collision>
      <visual name='X3/base_link_inertia_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>1 1 1</scale>
            <uri>model://x3/meshes/x3.dae</uri>
          </mesh>
        </geometry>
      </visual>

     
    </link>



    <link name='camera_link'>
      <!-- Camera positioned forward and tilted downward for ground surveillance -->
      <!-- Position: 0.2m forward from center, tilted 30 degrees down (0.5236 rad) -->
      <pose frame=''>0.2 0 0 0 0.5236 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 0 0</pose>
        <mass>0.001</mass>
        <inertia>
          <ixx>1e-6</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-6</iyy>
          <iyz>0</iyz>
          <izz>1e-6</izz>
        </inertia>
      </inertial>

      <sensor name="camera_front" type="camera">
        <pose>0 0 0 0 0 0</pose>
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <topic>/camera/image_raw</topic>
        
        <camera>
            <horizontal_fov>1.2</horizontal_fov>
            <distortion>
                <k1>0.0</k1>
                <k2>0.0</k2>
                <k3>0.0</k3>
                <p1>0.0</p1>
                <p2>0.0</p2>
                <center>0.5 0.5</center>
            </distortion>
            <image>
                <width>640</width>
                <height>480</height>
                <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.5</near>
                <far>50</far>
            </clip>
            <noise>
                <type>gaussian</type>
                <mean>0</mean>
                <stddev>0.005</stddev>
            </noise>
            
            <!-- IMPORTANT: Set the correct frame_id for ROS optical frame convention -->
            <frame_id>X3/camera_optical_frame</frame_id>
            <camera_info_topic>/camera/camera_info</camera_info_topic>
        </camera>
      </sensor>
    </link>

    <!-- Optical frame with correct ROS camera convention AND downward tilt -->
    <link name='camera_optical_frame'>
      <!-- Apply both the downward tilt AND the optical frame transformation -->
      <!-- First: 30° pitch down (0.5236 rad), then ROS optical transform -->
      <!-- Combined: pitch=0.5236 + roll=-π/2 + yaw=-π/2 -->
      <pose frame=''>0.2 0 0 -1.5708 0.5236 -1.5708</pose>
      <inertial>
        <pose frame=''>0 0 0 0 0 0</pose>
        <mass>0.001</mass>
        <inertia>
          <ixx>1e-6</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1e-6</iyy>
          <iyz>0</iyz>
          <izz>1e-6</izz>
        </inertia>
      </inertial>
    </link>

    <!-- Fixed joint to connect camera link to base -->
    <joint name='X3/camera_joint' type='fixed'>
      <child>camera_link</child>
      <parent>X3/base_link</parent>
    </joint>

    <!-- Fixed joint to connect optical frame to camera link -->
    <joint name='camera_optical_joint' type='fixed'>
      <child>camera_optical_frame</child>
      <parent>camera_link</parent>
      <!-- Apply ONLY the ROS optical frame transformation here -->
      <!-- The downward tilt is already in the camera_link pose -->
      <pose>0 0 0 -1.5708 0 -1.5708</pose>
    </joint>

    <link name='X3/rotor_0'>
      <pose frame=''>0.13 -0.22 0.023 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>4.17041e-05</iyy>
          <iyz>0</iyz>
          <izz>4.26041e-05</izz>
        </inertia>
      </inertial>
      <collision name='X3/rotor_0_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.1</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='X3/rotor_0_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.1 0.1 0.1</scale>
            <uri>model://x3/meshes/propeller_ccw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='X3/rotor_0_joint' type='revolute'>
      <child>X3/rotor_0</child>
      <parent>X3/base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='X3/rotor_1'>
      <pose frame=''>-0.13 0.2 0.023 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>4.17041e-05</iyy>
          <iyz>0</iyz>
          <izz>4.26041e-05</izz>
        </inertia>
      </inertial>
      <collision name='X3/rotor_1_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.1</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='X3/rotor_1_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.1 0.1 0.1</scale>
            <uri>model://x3/meshes/propeller_ccw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='X3/rotor_1_joint' type='revolute'>
      <child>X3/rotor_1</child>
      <parent>X3/base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='X3/rotor_2'>
      <pose frame=''>0.13 0.22 0.023 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>4.17041e-05</iyy>
          <iyz>0</iyz>
          <izz>4.26041e-05</izz>
        </inertia>
      </inertial>
      <collision name='X3/rotor_2_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.1</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='X3/rotor_2_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.1 0.1 0.1</scale>
            <uri>model://x3/meshes/propeller_cw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Blue</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='X3/rotor_2_joint' type='revolute'>
      <child>X3/rotor_2</child>
      <parent>X3/base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>
    <link name='X3/rotor_3'>
      <pose frame=''>-0.13 -0.2 0.023 0 -0 0</pose>
      <inertial>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <mass>0.005</mass>
        <inertia>
          <ixx>9.75e-07</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>4.17041e-05</iyy>
          <iyz>0</iyz>
          <izz>4.26041e-05</izz>
        </inertia>
      </inertial>
      <collision name='X3/rotor_3_collision'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <cylinder>
            <length>0.005</length>
            <radius>0.1</radius>
          </cylinder>
        </geometry>
        <surface>
          <contact>
            <ode/>
          </contact>
          <friction>
            <ode/>
          </friction>
        </surface>
      </collision>
      <visual name='X3/rotor_3_visual'>
        <pose frame=''>0 0 0 0 -0 0</pose>
        <geometry>
          <mesh>
            <scale>0.1 0.1 0.1</scale>
            <uri>model://x3/meshes/propeller_cw.dae</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Red</name>
            <uri>file://media/materials/scripts/gazebo.material</uri>
          </script>
        </material>
      </visual>
      <gravity>1</gravity>
      <velocity_decay/>
    </link>
    <joint name='X3/rotor_3_joint' type='revolute'>
      <child>X3/rotor_3</child>
      <parent>X3/base_link</parent>
      <axis>
        <xyz>0 0 1</xyz>
        <limit>
          <lower>-1e+16</lower>
          <upper>1e+16</upper>
        </limit>
        <dynamics>
          <spring_reference>0</spring_reference>
          <spring_stiffness>0</spring_stiffness>
        </dynamics>
        <use_parent_model_frame>1</use_parent_model_frame>
      </axis>
    </joint>

    <!-- Simple velocity controller plugin for basic movement -->
    <plugin filename="gz-sim-velocity-control-system" name="gz::sim::systems::VelocityControl">
      <initial_linear>0 0 0</initial_linear>
      <initial_angular>0 0 0</initial_angular>
    </plugin>

    <!-- Odometry publisher plugin -->
    <plugin filename="gz-sim-odometry-publisher-system" name="gz::sim::systems::OdometryPublisher">
      <dimensions>3</dimensions>
      <odom_frame>X3/odom</odom_frame>
      <robot_base_frame>X3/base_link</robot_base_frame>
      <odom_topic>odometry</odom_topic>
      <odom_publish_frequency>50</odom_publish_frequency>
    </plugin>

  </model>
</sdf>
